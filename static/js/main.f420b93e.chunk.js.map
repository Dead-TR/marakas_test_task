{"version":3,"sources":["components/Base.js","redux-modules/Reducer.js","components/Story/Story.js","components/Search/Search.js","components/Result/Pages/Pages.js","components/Result/Result.js","components/ActiveMovie/ActiveMovie.js","components/Loader/Loader.js","App.js","index.js"],"names":["baceURL","title","value","type","year","page","Story","story","store","SetUpdate","storyGoto","target","i","attributes","String","id","dispatch","className","onClick","event","closest","btn","document","querySelector","classList","contains","remove","add","content","contentActivator","map","item","key","data-item-id","parentElement","Search","SetStory","useState","inputYear","SetInputYear","useEffect","length","onSubmit","preventDefault","getState","Date","now","placeholder","onChange","defaultValue","disabled","inputText","split","filter","symbol","match","join","Pages","pagesNumber","pages","activePage","push","keys","pagesSplicer","splice","Number","assignedClass","setPage","innerText","Result","movies","pageNumber","SetPage","SetOpenedMovie","movie","imdbID","href","Title","Year","Poster","src","alt","ActiveMovie","openedMovie","close","Type","Loader","createStore","state","action","result","JSON","parse","localStorage","getItem","Base","subscribe","setItem","stringify","movieData","update","movieList","SetMovieList","getMovie","a","fetch","json","then","data","catch","console","log","Response","Math","ceil","totalResults","Error","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f420b93e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createStore } from 'redux';\nimport './Base.css';\n\nimport { Search } from './Search/Search';\nimport { Result } from './Result/Result';\nimport { ActiveMovie } from './ActiveMovie/ActiveMovie';\nimport { Loader } from './Loader/Loader';\n\nimport { reducer } from '../redux-modules/Reducer';\n\nconst initialState = {\n  title: '',\n  type: '',\n  year: '',\n  page: '1',\n};\n\nconst store = createStore(\n  reducer,\n  JSON.parse(localStorage.getItem('imdbMovieList_savedState')) || initialState,\n);\nlet baceURL;\n\nconst Base = () => {\n\n  store.subscribe(() => {\n    localStorage\n      .setItem('imdbMovieList_savedState', JSON.stringify(store.getState()));\n    const movieData = store.getState();\n\n    baceURL = `http://www.omdbapi.com/?s=${\n      movieData.title\n    }&type=${\n      movieData.type\n    }&y=${\n      movieData.year\n    }&page=${\n      movieData.page\n    }&apikey=925bbb84`;\n  });\n\n  const [openedMovie, SetOpenedMovie] = useState(null);\n  const [story, SetStory] = useState([]);\n\n  const [update, SetUpdate] = useState(false);\n  const [movieList, SetMovieList] = useState(JSON.parse(localStorage.getItem('imdbMovieList_savedMovie')) || []);\n\n  const getMovie = async() => {\n\n    await (await fetch(baceURL)).json()\n      .then((data) => {\n        SetMovieList(data);\n        localStorage.setItem('imdbMovieList_savedMovie', JSON.stringify(data));\n      })\n      .catch((data) => {\n        console.log(\"===> ERROR <=== [\", data, \"]\");\n      });\n\n    SetUpdate(false);\n  };\n\n  useEffect(() => () => getMovie(), [update]);\n\n  return (\n    <section className=\"base\">\n      <Search\n        SetUpdate={SetUpdate}\n        store={store}\n        story={story}\n        SetStory={SetStory}\n      />\n\n      {\n        (update === true)\n          && <Loader />\n      }\n\n      {\n        (openedMovie !== null)\n          && (\n            <ActiveMovie\n              openedMovie={openedMovie}\n              SetOpenedMovie={SetOpenedMovie}\n            />\n          )\n      }\n\n      {\n        (movieList.Response === 'True')\n          ? (\n            <Result\n              store={store}\n              movies={movieList.Search}\n              SetUpdate={SetUpdate}\n              SetOpenedMovie={SetOpenedMovie}\n              pageNumber={Math.ceil((movieList.totalResults / 10))}\n            />\n          )\n          : (\n            <div className=\"bace__error\">\n              <p className=\"bace__error-message\">\n                {movieList.Error}\n              </p>\n            </div>\n          )\n      }\n    </section>\n  );\n};\n\nexport default Base;\n","const TYPE_TITLE = 'title';\nconst TYPE_TYPE = 'type';\nconst TYPE_YEAR = 'year';\nconst TYPE_PAGE = 'page';\n\nexport const title = (value) => ({\n  type: TYPE_TITLE,\n  value,\n});\nexport const type = (value) => ({\n  type: TYPE_TYPE,\n  value,\n});\nexport const year = (value) => ({\n  type: TYPE_YEAR,\n  value,\n});\nexport const page = (value) => ({\n  type: TYPE_PAGE,\n  value,\n});\n\nexport const reducer = (state, action) => {\n  let result;\n\n  switch (action.type) {\n    case TYPE_TITLE:\n      result = {\n        ...state,\n        title: action.value.title,\n      };\n      break;\n\n    case TYPE_TYPE:\n      result = {\n        ...state,\n        type: action.value.type,\n      };\n      break;\n\n    case TYPE_YEAR:\n      result = {\n        ...state,\n        year: action.value.year,\n      };\n      break;\n\n    case TYPE_PAGE:\n      result = {\n        ...state,\n        page: action.value.page,\n      };\n      break;\n\n    default:\n      result = {\n        ...state,\n      };\n      break;\n  }\n\n  return result;\n};\n","import React, { useState, useEffect } from 'react';\nimport './Story.css';\nimport {\n  title,\n  year,\n  page,\n  type,\n} from '../../redux-modules/Reducer';\nexport const Story = ({ story, store, SetUpdate }) => {\n\n  const contentActivator = (event) => {\n    if (event.target.closest('.story__btn')) {\n      const btn = document.querySelector('.story__btn');\n\n      btn.classList.contains('story__btn_active')\n        ? btn.classList.remove('story__btn_active')\n        : btn.classList.add('story__btn_active')\n    }\n\n    const content = document.querySelector('.story__content');\n\n    if (content) {\n      content.classList.contains('story__content_active')\n        ? content.classList.remove('story__content_active')\n        : content.classList.add('story__content_active');\n    }\n  };\n\n  const storyGoto = (target) => {\n    for (const i of story) {\n      if (target.attributes['data-item-id'].value === String(i.id)) {\n        store.dispatch(title({'title': i.title}))\n        store.dispatch(year({'year': i.year  || ''}))\n        store.dispatch(page({'page': 1}))\n        SetUpdate()\n      }\n    }\n  }\n\n  return (\n    <section className=\"story\">\n      <div\n        className=\"story__btn\"\n        onClick={(event) => contentActivator(event)}\n      >\n        <div />\n        <div />\n        <div />\n      </div>\n\n      <div className=\"story__content\">\n        {\n          story.map((item) => (\n            <div\n              className=\"story__item\"\n              key={item.id}\n              data-item-id={item.id}\n              onClick={(event) => {\n                if (event.target.classList.contains('story__item')) {\n                  storyGoto(event.target)\n                } else if (event.target.parentElement.classList.contains('story__item')) {\n                  storyGoto(event.target.parentElement)\n                }\n              }}\n            >\n              <p className=\"story__text\">{item.title}</p>\n              <p className=\"story__text\">{item.year}</p>\n            </div>\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport './Search.css';\nimport {\n  title,\n  type,\n  year,\n  page,\n} from '../../redux-modules/Reducer';\nimport { Story } from '../Story/Story';\n\nexport const Search = ({ store, SetUpdate, story, SetStory }) => {\n  const [inputYear, SetInputYear] = useState('');\n\n  const yearSearch = (inputText) => {\n    SetInputYear(inputText\n      .split('')\n      .filter((symbol) => {\n        if (symbol.match(/[0-9]/g)) {\n          return symbol;\n        }\n\n        return '';\n      })\n      .join(''),\n    );\n  };\n\n  useEffect(() => {\n    if (inputYear.length === 4 || inputYear.length === 0) {\n      store.dispatch(year({'year': inputYear}));\n    }\n  }, [inputYear]);\n\n  return (\n    <section className=\"search\">\n      <form\n        className=\"search__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          store.dispatch(page({'page': 1}));\n          SetUpdate(true);\n\n          SetStory([\n            ...story,\n            {\n              ...store.getState(),\n              id: Date.now(),\n            },\n          ]);\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          className=\"search__title\"\n          onChange={(event) => {\n            store.dispatch(title({'title': event.target.value}));\n          }}\n        />\n        <select\n          className=\"search__type\"\n          onChange={(event) => {\n            store.dispatch(type({'type': event.target.value}));\n          }}\n          defaultValue=\"\"\n        >\n          <option value=\"disable\" disabled>Type</option>\n          <option value=\"\">All</option>\n          <option value=\"movie\">Movie</option>\n          <option value=\"series\">Series</option>\n          <option value=\"episode\">Episode</option>\n          <option value=\"game\">Game</option>\n        </select>\n        <input\n          type=\"text\"\n          placeholder=\"Year\"\n          className=\"search__year\"\n          value={inputYear}\n          onChange={(event) => {\n            yearSearch(event.target.value);\n          }}\n        />\n        <button\n          className=\"search__btn\"\n          type=\"submit\"\n        >\n          Search\n        </button>\n      </form>\n\n      <Story\n        SetUpdate={SetUpdate}\n        store={store}\n        story={story}\n      />\n    </section>\n  );\n};\n","import React from 'react';\nimport './Pages.css';\nimport { page as setPage } from '../../../redux-modules/Reducer';\n\nexport const Pages = ({ store, pagesNumber, SetUpdate }) => {\n  const pages = [];\n  const activePage = store.getState().page;\n\n  for (let i = 0; i < pagesNumber; i++) {\n    pages.push(i + 1);\n  }\n\n  const keys = [...pages];\n  const pagesSplicer = (page) => {\n    pages.splice(page, 1);\n\n    if (pages[page - 1] !== '...') {\n      pages.splice(page, 0, '...');\n      page++;\n    }\n\n    return page - 1;\n  };\n\n  for (let page = 0; page < pages[page]; page++) {\n    if (page > 0 && pages[page] < Number(pagesNumber)) {\n\n      if (pages[page] < Number(activePage) - 2) {\n        page = pagesSplicer(page);\n      }\n      else if (pages[page] > Number(activePage) + 2) {\n        page = pagesSplicer(page);\n      }\n    }\n  }\n\n  const activePageClass = \"pages__item pages__disable pages__active\";\n  const threeDotClass = \"pages__item pages__disable\";\n\n  return (\n    <section className=\"pages\">\n      <ul className=\"pages__list\">\n        {\n          pages.map((page, i) => {\n\n            if ((page === '...') || (page === Number(activePage))) {\n              let assignedClass;\n\n              (page === Number(activePage))\n                ? assignedClass = activePageClass\n                : assignedClass = threeDotClass;\n\n              return (\n                <li\n                  className={assignedClass}\n                  key={keys[i]}\n                >\n                  {page}\n                </li>\n              );\n            }\n\n            else {\n              return (\n                <li\n                  className=\"pages__item\"\n                  key={keys[i]}\n                  onClick={(event) => {\n                    store.dispatch(setPage({'page': event.target.innerText}));\n                    SetUpdate(true)\n                  }}\n                >\n                  {page}\n                </li>\n              )\n            };\n          })\n        }\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\nimport './Result.css';\nimport { Pages } from './Pages/Pages';\n\nexport const Result = ({\n  store,\n  SetUpdate,\n  movies,\n  pageNumber,\n  SetPage,\n  SetOpenedMovie\n}) => {\n\n  return (\n    <section className=\"result\">\n      <ul className=\"result__list\">\n        {movies.map(movie => (\n          <li key={movie.imdbID} className=\"result__item\">\n            <a\n              href=\"/#\"\n              onClick={(event) => {\n                event.preventDefault();\n                SetOpenedMovie({...movie});\n              }}\n            >\n              <div className=\"result__item-data\">\n                <h1 className=\"result__item-title\">{movie.Title}</h1>\n                <p className=\"result__item-year\">{movie.Year}</p>\n              </div>\n              {\n                movie.Poster === 'N/A'\n                  ? (\n                    <img\n                      src=\"/img/no-img.png\"\n                      alt={movie.Title}\n                      className=\"result__item-poster\"\n                    />\n                  )\n                  : (\n                    <img\n                      src={movie.Poster}\n                      alt={movie.Title}\n                      className=\"result__item-poster\"\n                    />\n                  )\n              }\n            </a>\n          </li>\n        ))}\n      </ul>\n\n      <div>\n        <Pages\n          store={store}\n          pagesNumber={pageNumber}\n          SetPage={SetPage}\n          SetUpdate={SetUpdate}\n        />\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\nimport './ActiveMovie.css';\n\nexport const ActiveMovie = ({ openedMovie, SetOpenedMovie }) => {\n  const close = () => {\n    SetOpenedMovie(null);\n  };\n\n  return (\n    <section\n      className=\"active-movie\"\n      onClick={(event) => {\n        if (event.target.className === 'active-movie') {\n          close();\n        }\n      }}\n    >\n      <div className=\"active-movie__item\">\n        <div className=\"active-movie__data\">\n          <h1 className=\"active-movie__title\">{openedMovie.Title}</h1>\n          <p className=\"active-movie__text\">Year: {openedMovie.Year}</p>\n          <p className=\"active-movie__text\">Type: {openedMovie.Type}</p>\n          <a\n            className=\"active-movie__link\"\n            target=\"blank\"\n            href={`https://www.imdb.com/title/${openedMovie.imdbID}/`}\n          >\n            IMDB\n          </a>\n          <div\n            className=\"active-movie__close\"\n            onClick={(event) => close()}\n          />\n        </div>\n        {\n          openedMovie.Poster === 'N/A'\n            ? (\n              <img\n                src=\"/img/no-img.png\"\n                alt={openedMovie.Title}\n                className=\"active-movie__img\"\n              />\n            )\n            : (\n              <img\n                src={openedMovie.Poster}\n                alt={openedMovie.Title}\n                className=\"active-movie__img\"\n              />\n            )\n        }\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\nimport './Loader.css';\n\nexport const Loader = () => {\n  return (\n    <section className=\"loader\">\n      <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\n    </section>\n  );\n};\n","import React from 'react';\nimport Base from './components/Base';\nimport './App.css';\n\nconst App = () => (\n  <Base />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}